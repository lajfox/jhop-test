<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
		default-lazy-init="true">

	<description>Spring公共配置</description>

	<!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
	<context:component-scan base-package="com.techstar">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	<!-- Jpa Entity Manager 配置 -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="persistenceUnitName" value="defaultPU"/>
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>			
		<property name="persistenceXmlLocation" value="classpath*:META-INF/jpa_persistence.xml" />
		<property name="jpaProperties">
			<props>				
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
				<prop key="hibernate.format_sql">true</prop>				  
			</props>
		</property>
	</bean>
		
	<bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform">
			<value>${databasePlatform}</value>
		</property>
		<property name="showSql">
		  <value>true</value>
		</property>
		<property name="generateDdl">
		  <value>true</value>
		</property> 		
	</bean>

	<!-- Spring Data Jpa配置, 扫描base-package下所有继承于Repository<T,ID>的接口 -->
 	<jpa:repositories base-package="com.techstar.**.repository.jpa" factory-class="com.techstar.modules.springframework.data.jpa.repository.support.MyJpaRepositoryFactoryBean" transaction-manager-ref="transactionManager" entity-manager-factory-ref="entityManagerFactory"/>
	
	<!-- MyBatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<property name="typeAliasesPackage" value="com.techstar.hbjmis.entity,com.techstar.security.entity" />
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath*:/mybatis/*Mapper.xml" />
		
		<property name="configurationProperties">
			<props>
				<prop key="dialect">${databasePlatform}</prop>
				<prop key="mapUnderscoreToCamelCase">true</prop>	
				<prop key="useColumnLabel">true</prop>		
			</props>
		</property>
		
		<property name="plugins">
			<list>
			 	<bean class="com.techstar.modules.mybatis.plugin.PaginationInterceptor" /> 
			 	<bean class="com.techstar.modules.mybatis.plugin.ParameterHandlerInterceptor" />
			 	<bean class="com.techstar.modules.mybatis.plugin.ResultSetInterceptor" />
			</list>
		</property>
	</bean>
	<!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.techstar.**.repository.mybatis" />
		<property name="annotationClass" value="com.techstar.modules.mybatis.repository.MyBatisRepository"/>
	</bean>
	
	<!-- 事务管理器配置, Jpa单数据源事务 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	
	<!-- 定义aspectj -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>

	<!-- hibernate validator -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>
	

	<!-- production环境 -->
	<beans profile="production">
		<context:property-placeholder ignore-resource-not-found="true"
			location="classpath*:/application.properties" />	

		<!-- 数据源定义,使用c3p0 连接池 -->
		<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
			destroy-method="close">
			<property name="automaticTestTable" value="C3P0TESTTABLE" />
			<property name="driverClass" value="${jdbc.driver}" />
			<property name="jdbcUrl" value="${jdbc.url}" />
			<property name="user" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<property name="initialPoolSize" value="1" />
			<property name="minPoolSize" value="2" />
			<property name="maxPoolSize" value="5" />
			<property name="acquireIncrement" value="2" />
			<property name="maxIdleTime" value="120" />
			<property name="idleConnectionTestPeriod" value="120" />
			<property name="breakAfterAcquireFailure" value="false" />
			<property name="testConnectionOnCheckin" value="true" />
			<property name="acquireRetryAttempts" value="100" />
			<property name="acquireRetryDelay" value="1000" />
		</bean>	
		
		<!-- 初始化数据表数据 
		<jdbc:initialize-database data-source="dataSource" ignore-failures="ALL">
			<jdbc:script location="classpath:data/cleanup-data.sql" />
			<jdbc:script location="classpath:data/import-data.sql" />
		</jdbc:initialize-database>	
		-->		

	</beans>
	
	<!-- unit test环境 -->
	<beans profile="test">
		<context:property-placeholder ignore-resource-not-found="true"
			location="classpath*:/application.properties" />	
		
		<!-- 嵌入式内存中数据库 -->
		<jdbc:embedded-database id="dataSource" type="H2">
			<jdbc:script location="classpath:sql/h2/schema.sql" />
			<jdbc:script location="classpath:data/import-data.sql" />
		</jdbc:embedded-database>
	
	</beans>
	
</beans>